{"version":3,"sources":["_version.scss","sample.css","_grid.scss","l/_base.scss","l/_xl.scss","m/_base.scss","_vars.scss","s/_base.scss","components/_body.scss","_functions.scss","components/_practice.scss","_mixins.scss"],"names":[],"mappings":"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","file":"../sample.css","sourcesContent":["/*\n * Hoisin.scss\n * CSS responsive framework boilerplate\n * Create your own grids, plugin anything\n * Version: 0.9.18\n * Created by: Cyber-Duck Ltd <info@cyber-duck.co.uk>,\n *             Ramon Lapenta <me@ramonlapenta.com>\n *\n */\n ","/*\n * Hoisin.scss\n * CSS responsive framework boilerplate\n * Create your own grids, plugin anything\n * Version: 0.9.18\n * Created by: Cyber-Duck Ltd <info@cyber-duck.co.uk>,\n *             Ramon Lapenta <me@ramonlapenta.com>\n *\n */\n@media (min-width: 1024px) {\n  .col1, .col2, .col3, .col4, .col5, .col6, .col7, .col8, .col9, .col10, .col11, .col12 {\n    float: left;\n    margin: 0 10px; }\n  .container {\n    margin: 0 auto;\n    width: 960px; }\n    .container:after {\n      clear: both;\n      content: '';\n      display: block; }\n  .col1 > .container {\n    margin: 0 0 0 -10px;\n    width: 80px; }\n  .col2 > .container {\n    margin: 0 0 0 -10px;\n    width: 160px; }\n  .col3 > .container {\n    margin: 0 0 0 -10px;\n    width: 240px; }\n  .col4 > .container {\n    margin: 0 0 0 -10px;\n    width: 320px; }\n  .col5 > .container {\n    margin: 0 0 0 -10px;\n    width: 400px; }\n  .col6 > .container {\n    margin: 0 0 0 -10px;\n    width: 480px; }\n  .col7 > .container {\n    margin: 0 0 0 -10px;\n    width: 560px; }\n  .col8 > .container {\n    margin: 0 0 0 -10px;\n    width: 640px; }\n  .col9 > .container {\n    margin: 0 0 0 -10px;\n    width: 720px; }\n  .col10 > .container {\n    margin: 0 0 0 -10px;\n    width: 800px; }\n  .col11 > .container {\n    margin: 0 0 0 -10px;\n    width: 880px; }\n  .col12 > .container {\n    margin: 0 0 0 -10px;\n    width: 960px; }\n  .col1 {\n    width: 60px; }\n  .col2 {\n    width: 140px; }\n  .col3 {\n    width: 220px; }\n  .col4 {\n    width: 300px; }\n  .col5 {\n    width: 380px; }\n  .col6 {\n    width: 460px; }\n  .col7 {\n    width: 540px; }\n  .col8 {\n    width: 620px; }\n  .col9 {\n    width: 700px; }\n  .col10 {\n    width: 780px; }\n  .col11 {\n    width: 860px; }\n  .col12 {\n    width: 940px; }\n  .pre1 {\n    margin-left: 90px; }\n  .pre2 {\n    margin-left: 170px; }\n  .pre3 {\n    margin-left: 250px; }\n  .pre4 {\n    margin-left: 330px; }\n  .pre5 {\n    margin-left: 410px; }\n  .pre6 {\n    margin-left: 490px; }\n  .pre7 {\n    margin-left: 570px; }\n  .pre8 {\n    margin-left: 650px; }\n  .pre9 {\n    margin-left: 730px; }\n  .pre10 {\n    margin-left: 810px; }\n  .pre11 {\n    margin-left: 890px; }\n  .suf1 {\n    margin-right: 80px; }\n  .suf2 {\n    margin-right: 160px; }\n  .suf3 {\n    margin-right: 240px; }\n  .suf4 {\n    margin-right: 320px; }\n  .suf5 {\n    margin-right: 400px; }\n  .suf6 {\n    margin-right: 480px; }\n  .suf7 {\n    margin-right: 560px; }\n  .suf8 {\n    margin-right: 640px; }\n  .suf9 {\n    margin-right: 720px; }\n  .suf10 {\n    margin-right: 800px; }\n  .suf11 {\n    margin-right: 880px; }\n  .colr {\n    float: right;\n    margin: 0 10px; }\n  .alpha {\n    margin-left: 0; }\n  .omega {\n    margin-right: 0; }\n  .clear {\n    clear: both; }\n  .center {\n    float: none;\n    margin: 0 auto; }\n  .l-hide {\n    display: none; }\n  .l-show-block {\n    display: block; }\n  .l-show-inline {\n    display: inline; }\n  .s-show-block,\n  .s-show-block,\n  .m-show-inline,\n  .m-show-inline {\n    display: none; } }\n\n@media (min-width: 1360px) {\n  .col1, .col2, .col3, .col4, .col5, .col6, .col7, .col8, .col9, .col10, .col11 {\n    float: left;\n    margin: 0 15px; }\n  .col12 {\n    margin: 0 15px;\n    width: 1170px; }\n  .col1 {\n    width: 70px; }\n  .col2 {\n    width: 170px; }\n  .col3 {\n    width: 270px; }\n  .col4 {\n    width: 370px; }\n  .col5 {\n    width: 470px; }\n  .col6 {\n    width: 570px; }\n  .col7 {\n    width: 670px; }\n  .col8 {\n    width: 770px; }\n  .col9 {\n    width: 870px; }\n  .col10 {\n    width: 970px; }\n  .col11 {\n    width: 1070px; }\n  .pre1 {\n    margin-left: 115px; }\n  .pre2 {\n    margin-left: 215px; }\n  .pre3 {\n    margin-left: 315px; }\n  .pre4 {\n    margin-left: 415px; }\n  .pre5 {\n    margin-left: 515px; }\n  .pre6 {\n    margin-left: 615px; }\n  .pre7 {\n    margin-left: 715px; }\n  .pre8 {\n    margin-left: 815px; }\n  .pre9 {\n    margin-left: 915px; }\n  .pre10 {\n    margin-left: 1015px; }\n  .pre11 {\n    margin-left: 1115px; }\n  .suf1 {\n    margin-right: 115px; }\n  .suf2 {\n    margin-right: 215px; }\n  .suf3 {\n    margin-right: 315px; }\n  .suf4 {\n    margin-right: 415px; }\n  .suf5 {\n    margin-right: 515px; }\n  .suf6 {\n    margin-right: 615px; }\n  .suf7 {\n    margin-right: 715px; }\n  .suf8 {\n    margin-right: 815px; }\n  .suf9 {\n    margin-right: 915px; }\n  .suf10 {\n    margin-right: 1015px; }\n  .suf11 {\n    margin-right: 1115px; }\n  .container {\n    width: 1200px; }\n  .col1 > .container {\n    margin: 0 0 0 -15px;\n    width: 100px; }\n  .col2 > .container {\n    margin: 0 0 0 -15px;\n    width: 200px; }\n  .col3 > .container {\n    margin: 0 0 0 -15px;\n    width: 300px; }\n  .col4 > .container {\n    margin: 0 0 0 -15px;\n    width: 400px; }\n  .col5 > .container {\n    margin: 0 0 0 -15px;\n    width: 500px; }\n  .col6 > .container {\n    margin: 0 0 0 -15px;\n    width: 600px; }\n  .col7 > .container {\n    margin: 0 0 0 -15px;\n    width: 700px; }\n  .col8 > .container {\n    margin: 0 0 0 -15px;\n    width: 800px; }\n  .col9 > .container {\n    margin: 0 0 0 -15px;\n    width: 900px; }\n  .col10 > .container {\n    margin: 0 0 0 -15px;\n    width: 1000px; }\n  .col11 > .container {\n    margin: 0 0 0 -15px;\n    width: 1100px; }\n  .col12 > .container {\n    margin: 0 0 0 -15px;\n    width: 1200px; }\n  .colr {\n    float: right;\n    margin: 0 15px; }\n  .alpha {\n    margin-left: 0; }\n  .omega {\n    margin-right: 0; }\n  .clear {\n    clear: both; }\n  .center {\n    float: none;\n    margin: 0 auto; } }\n\n@media (min-width: 680px) and (max-width: 1023px) {\n  .wrap {\n    overflow: hidden;\n    width: 100%; }\n  .container {\n    width: 100%;\n    padding: 0 5px;\n    box-sizing: border-box;\n    margin: 0 auto;\n    max-width: 780px; }\n    .container::after {\n      clear: both;\n      content: '';\n      display: block; }\n    .container .container {\n      width: 102%;\n      width: calc(100% + 20px);\n      margin-left: -10px; }\n  .col12,\n  .col11,\n  .col10,\n  .col9,\n  .col8,\n  .col7 {\n    margin: 0;\n    padding: 0 5px;\n    width: 100%;\n    box-sizing: border-box; }\n  .col6,\n  .col5,\n  .col4,\n  .col3 {\n    float: left;\n    margin: 0;\n    padding: 0 5px;\n    width: 50%;\n    box-sizing: border-box; }\n  .col2 {\n    float: left;\n    margin: 0;\n    padding: 0 5px;\n    width: 33.33%;\n    box-sizing: border-box; }\n  .col1 {\n    float: left;\n    margin: 0;\n    padding: 0 5px;\n    width: 25%;\n    box-sizing: border-box; }\n  .m-full {\n    width: 100%; }\n    .m-full.colr {\n      float: none; }\n  .m-half,\n  .m-2_4 {\n    float: left;\n    width: 50%; }\n  .m-3_4 {\n    float: left;\n    width: 75%; }\n  .m-2_3 {\n    float: left;\n    width: 66.66%; }\n  .m-1_3 {\n    float: left;\n    width: 33.33%; }\n  .m-1_4 {\n    float: left;\n    width: 25%; }\n  .colr {\n    float: right; }\n  .alpha {\n    margin-left: 0;\n    padding-left: 0; }\n  .omega {\n    margin-right: 0;\n    padding-right: 0; }\n  .clear {\n    clear: both; }\n  .center {\n    float: none;\n    margin: 0 auto; }\n  .m-hide {\n    display: none; }\n  .m-show-block {\n    display: block; }\n  .m-show-inline {\n    display: inline; }\n  .s-show-block,\n  .s-show-block,\n  .l-show-inline,\n  .l-show-inline {\n    display: none; } }\n\n@media (min-width: 120px) and (max-width: 679px) {\n  .wrap {\n    overflow: hidden;\n    width: 100%; }\n  .container {\n    width: 100%;\n    padding: 0 5px;\n    box-sizing: border-box;\n    margin: 0 auto;\n    max-width: 540px; }\n    .container:after {\n      clear: both;\n      content: '';\n      display: block; }\n    .container .container {\n      width: 102%;\n      width: calc(100% + 20px);\n      margin-left: -10px; }\n  .col12,\n  .col11,\n  .col10,\n  .col9,\n  .col8,\n  .col7,\n  .col6,\n  .col5,\n  .col4,\n  .col3 {\n    margin: 0;\n    padding: 0 5px;\n    width: 100%;\n    box-sizing: border-box; }\n  .col2,\n  .col1 {\n    float: left;\n    margin: 0;\n    padding: 0 5px;\n    width: 50%;\n    box-sizing: border-box; }\n  .s-full {\n    float: none;\n    margin: 0;\n    padding: 0 5px;\n    width: 100%;\n    box-sizing: border-box; }\n  .s-half {\n    float: left;\n    margin: 0;\n    padding: 0 5px;\n    width: 50%;\n    box-sizing: border-box; }\n  .clear {\n    clear: both; }\n  .s-hide {\n    display: none; }\n  .s-show-block {\n    display: block; }\n  .s-show-inline {\n    display: inline; }\n  .m-show-block,\n  .m-show-inline,\n  .l-show-block,\n  .l-show-inline {\n    display: none; } }\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: sans-serif; }\n\n.red {\n  color: purple; }\n\n.red-light {\n  color: #b3b3ff; }\n\n.red-dark {\n  color: #010180; }\n\n@media (min-width: 1024px) {\n  body {\n    font-size: 18px; } }\n\n@media (min-width: 680px) and (max-width: 1023px) {\n  body {\n    font-size: 16px; } }\n\n@media (min-width: 120px) and (max-width: 679px) {\n  body {\n    font-size: 14px; } }\n\nbody {\n  color: #666666;\n  margin: 0;\n  padding: 50px 0;\n  font-family: \"Roboto Condensed\", sans-serif;\n  font-size: 18px;\n  font-weight: 300;\n  background: white; }\n\nh2 {\n  color: #d8531e;\n  font-weight: 300;\n  margin: 0;\n  font-size: 48px;\n  font-size: 48px; }\n\nh3 {\n  color: #333333;\n  font-weight: 300;\n  margin: 0;\n  font-size: 36px;\n  line-height: 36px;\n  padding: 12px 0; }\n\np {\n  margin: 0 0 21px 0; }\n\na {\n  color: #d8531e; }\n\nsection {\n  margin-bottom: 50px; }\n\n.box {\n  margin: 0 0 10px 0;\n  padding: 10px;\n  background: #f5f5f5; }\n  @media (min-width: 1024px) {\n    .box {\n      margin-bottom: 20px;\n      padding: 20px; } }\n  @media (min-width: 1360px) {\n    .box {\n      margin-bottom: 30px;\n      padding: 30px; } }\n  .box p {\n    margin: 0; }\n\n.code {\n  font-family: \"Courier New\", serif;\n  font-size: 14px; }\n\n.nesting {\n  background-color: #ffffdf;\n  margin-bottom: 20px; }\n  .nesting .nesting {\n    background-color: #ffe7df; }\n\npre {\n  border: 1px solid #cccccc;\n  background-color: #f9f9f9;\n  padding: 10px;\n  margin: 0;\n  overflow: auto; }\n\n@media (min-width: 1024px) {\n  .content {\n    float: left;\n    margin: 0 10px;\n    width: 620px; } }\n\n@media (min-width: 1360px) {\n  .content {\n    margin: 0 15px;\n    width: 770px; } }\n\n@media (min-width: 680px) and (max-width: 1023px) {\n  .content {\n    float: left;\n    padding: 0 5px;\n    width: 66.66%;\n    box-sizing: border-box; } }\n\n@media (min-width: 680px) and (max-width: 1023px) {\n  .content {\n    float: left;\n    padding: 0 5px;\n    width: 66.66%;\n    box-sizing: border-box; } }\n\n@media (min-width: 1024px) {\n  .sidebar {\n    float: right;\n    margin: 0 10px;\n    width: 300px; } }\n\n@media (min-width: 1360px) {\n  .sidebar {\n    margin: 0 15px;\n    width: 370px; } }\n\n@media (min-width: 680px) and (max-width: 1023px) {\n  .sidebar {\n    float: right;\n    padding: 0 5px;\n    width: 33.33%;\n    box-sizing: border-box; } }\n\n@media (max-width: 680px) {\n  .sidebar {\n    padding: 0 5px;\n    box-sizing: border-box; } }\n\n@media (max-width: 680px) {\n  .test {\n    padding: 0 5px;\n    box-sizing: border-box; } }\n","@import 'vars';\n@import 'mixins';\n\n@media (min-width: $bp-l) {\n\n    @import 'l/base';\n}\n\n@media (min-width: $bp-xl) {\n\n    @import 'l/xl';\n}\n\n@media (min-width: $bp-m) and (max-width: ($bp-l - 1)) {\n\n    @import 'm/base';\n}\n\n@media (min-width: $bp-s) and (max-width: ($bp-m - 1)) {\n\n    @import 's/base';\n}\n","// * Large screens grid system\n// *\n\n// * Empty declaration as a base for all spans common styles\n%base-col {\n    float: left;\n    margin: 0 $gutter/2;\n}\n\n///* \n// * Cols\n// * Mixin to create the col spans using the previous empty % declaration\n// *\n// * @include cols;\n// */\n@mixin cols {\n    @for $i from 1 through $col-qty {\n        .col#{$i} { @extend %base-col; }\n    }\n}\n\n// Output the grid only if variable set to true\n@if ($include-grid) {\n\n    // * Define the size of the container using variables\n    $wrap: ($col-width * $col-qty) + $gutter * ($col-qty - 1);\n\n    .container {\n        margin: 0 auto;\n        width: $wrap + $gutter;\n\n        &:after {\n            clear: both;\n            content: '';\n            display: block;\n        }\n    }\n\n    // * Loop through the cols to generate size of nested containers\n    @for $i from 1 through $col-qty {\n        .col#{$i} > .container {\n            margin: 0 0 0 (-($gutter / 2));\n            width: ($col-width * $i) + ($gutter * $i);\n        }\n    }\n\n    // * Output all the spans common styles\n    @include cols;\n\n    // * Loop to generate each span \n    @for $i from 1 through $col-qty {\n        .col#{$i} {\n            width: ($col-width * $i) + ($gutter * $i) - $gutter;\n        }\n    }\n\n    @for $i from 1 through ($col-qty - 1) {\n        .pre#{$i} {\n            margin-left: ($col-width * $i) + ($gutter * $i) + ($gutter / 2);\n        }\n    }\n\n    @for $i from 1 through ($col-qty - 1) {\n        .suf#{$i} {\n            margin-right: ($col-width * $i) + ($gutter * $i);\n        }\n    }\n\n    // *\n    // * Additional grid utilities\n    // *\n\n    // * Force float a span to the right\n    .colr {\n        float: right;\n        margin: 0 ($gutter / 2);\n    }\n\n    // * Remove left margin from span\n    .alpha {\n        margin-left: 0;\n    }\n\n    // * Remove right margin from span\n    .omega {\n        margin-right: 0;\n    }\n\n    // * Clear helper\n    .clear {\n        clear: both;\n    }\n\n    // * center span in container\n    .center {\n        float: none;\n        margin: 0 auto;\n    }\n\n    // * Show or hide elements by breakpoint\n    .l-hide {\n        display: none;\n    }\n\n    .l-show-block {\n        display: block;\n    }\n\n    .l-show-inline {\n        display: inline;\n    }\n\n    .s-show-block,\n    .s-show-block,\n    .m-show-inline,\n    .m-show-inline {\n        display: none;\n    }\n}","// *\n// * Grid system\n// * Define the size of the container using extra large variables\n// *\n\n// * Generate a common style for all spans\n%base-xl-col {\n    float: left;\n    margin: 0 ($xl-gutter / 2);\n}\n\n///* \n// * Cols\n// * Mixin to create the col spans using the previous empty % declaration\n// *\n// * @include cols;\n// */\n@mixin cols {\n    @for $i from 1 to $col-qty {\n        .col#{$i} { @extend %base-xl-col; }\n    }\n}\n\n// Output the grid only if variable set to true\n@if ($include-grid) {\n\n    $wrap: ($xl-col-width * $col-qty) + ($xl-gutter * ($col-qty - 1));\n\n    // * Output the common span styles\n    @include cols;\n\n    // Define widths for each span\n    .col#{$col-qty} {\n        margin: 0 ($xl-gutter / 2); // Full width, doesn't need float\n        width: ($xl-col-width * $col-qty) + ($xl-gutter * $col-qty) - $xl-gutter;\n    }\n\n    @for $i from 1 to $col-qty {\n        .col#{$i} {\n            width: ($xl-col-width * $i) + ($xl-gutter * $i) - $xl-gutter;\n        }\n    }\n\n    @for $i from 1 through ($col-qty - 1) {\n        .pre#{$i} {\n            margin-left: ($xl-col-width * $i) + ($xl-gutter * $i) + ($xl-gutter / 2);\n        }\n    }\n\n    @for $i from 1 through ($col-qty - 1) {\n        .suf#{$i} {\n            margin-right: ($xl-col-width * $i) + ($xl-gutter * $i) + ($xl-gutter / 2);\n        }\n    }\n\n    .container {\n        width: $wrap + $xl-gutter;\n    }\n\n    @for $i from 1 through $col-qty {\n        .col#{$i} > .container {\n            margin: 0 0 0 (-($xl-gutter / 2));\n            width: ($xl-col-width * $i) + ($xl-gutter * $i);\n        }\n    }\n\n    // * Grid utilities\n    .colr {\n        float: right;\n        margin: 0 ($xl-gutter / 2);\n    }\n\n    .alpha {\n        margin-left: 0;\n    }\n\n    .omega {\n        margin-right: 0;\n    }\n\n    .clear {\n        clear: both;\n    }\n\n    .center {\n        float: none;\n        margin: 0 auto;\n    }\n}\n","// * Grid system\n// * Define the properties of the flexible container\n// *\n\n// Output the grid only if variable set to true\n@if ($include-grid) {\n    .wrap {\n        overflow: hidden;\n        width: 100%;\n    }\n\n    .container {\n        width: 100%;\n        padding: 0 ($gutter / 4);\n        box-sizing: border-box;\n        margin: 0 auto;\n        max-width: $m-max-width;\n\n        &::after {\n            clear: both;\n            content: '';\n            display: block;\n        }\n\n        .container {\n            width: 102%;\n            width: calc(100% + #{$gutter});\n            margin-left: -($gutter / 2);\n        }\n    }\n\n    .col12,\n    .col11,\n    .col10,\n    .col9,\n    .col8,\n    .col7 {\n        margin: 0;\n        padding: 0 ($gutter / 4);\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    .col6,\n    .col5,\n    .col4,\n    .col3 {\n        float: left;\n        margin: 0;\n        padding: 0 ($gutter / 4);\n        width: 50%;\n        box-sizing: border-box;\n    }\n\n    .col2 {\n        float: left;\n        margin: 0;\n        padding: 0 ($gutter / 4);\n        width: 33.33%;\n        box-sizing: border-box;\n    }\n\n    .col1 {\n        float: left;\n        margin: 0;\n        padding: 0 ($gutter / 4);\n        width: 25%;\n        box-sizing: border-box;\n    }\n\n    .m-full {\n        width: 100%;\n\n        &.colr {\n            float: none;\n        }\n    }\n\n    .m-half,\n    .m-2_4 {\n        float: left;\n        width: 50%;\n    }\n\n    .m-3_4 {\n        float: left;\n        width: 75%;\n    }\n\n    .m-2_3 {\n        float: left;\n        width: 66.66%;\n    }\n\n    .m-1_3 {\n        float: left;\n        width: 33.33%;\n    }\n\n    .m-1_4 {\n        float: left;\n        width: 25%;\n    }\n\n    // * Additional grid utilities\n    .colr {\n        float: right;\n    }\n\n    .alpha {\n        margin-left: 0;\n        padding-left: 0;\n    }\n\n    .omega {\n        margin-right: 0;\n        padding-right: 0;\n    }\n\n    .clear {\n        clear: both;\n    }\n\n    .center {\n        float: none;\n        margin: 0 auto;\n    }\n\n    // * Show or hide elements by breakpoint\n    .m-hide {\n        display: none;\n    }\n\n    .m-show-block {\n        display: block;\n    }\n\n    .m-show-inline {\n        display: inline;\n    }\n\n    .s-show-block,\n    .s-show-block,\n    .l-show-inline,\n    .l-show-inline {\n        display: none;\n    }\n}\n","// Colours\n$highlight:                     #fa9200;\n\n$error:                         #ff0000;\n$error-bg:                      #ffe5e5;\n\n$success:                       #339900;\n$success-bg:                    #eaf5e5;\n\n$info:                          #3399ff;\n$info-bg:                       #eaf5ff;\n\n$warning:                       #ffff00;\n$warning-bg:                    #ffffe5;\n\n$black:                         #010101;\n$white:                         #ffffff;\n$text:                          $black;\n$title:                         $black;\n\n// Grid\n$include-grid:                  true;\n$include-flexible-grid:         true;\n$col-qty:                       12;\n$col-width:                     60px;\n$gutter:                        20px;\n\n// Large desktop grid\n$xl-col-width:                  70px;\n$xl-gutter:                     30px;\n\n$m-max-width:                   780px;\n$s-max-width:                   540px;\n$flex-grid-max-width:           1680px;\n\n// Breakpoints\n$bp-xl:                         1360px;\n$bp-l:                          1024px;\n$bp-m:                          680px;\n$bp-s:                          120px;\n\n// Paths\n$img:                           '../img/';\n$sprite:                        '../img/sprite.png';\n$fonts:                         '../fonts/';\n    \n// Typography\n$body-font:                     sans-serif;\n$title-font:                    serif;\n","// * Grid system\n// * Define the properties of the flexible container\n// *\n\n// Output the grid only if variable set to true\n@if ($include-grid) {\n    .wrap {\n        overflow: hidden;\n        width: 100%;\n    }\n\n    .container {\n        width: 100%;\n        padding: 0 ($gutter / 4);\n        box-sizing: border-box;\n        margin: 0 auto;\n        max-width: $s-max-width;\n\n        &:after {\n            clear: both;\n            content: '';\n            display: block;\n        }\n\n        .container {\n            width: 102%;\n            width: calc(100% + #{$gutter});\n            margin-left: -($gutter / 2);\n        }\n    }\n\n    .col12,\n    .col11,\n    .col10,\n    .col9,\n    .col8,\n    .col7,\n    .col6,\n    .col5,\n    .col4,\n    .col3 {\n        margin: 0;\n        padding: 0 ($gutter / 4);\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    .col2,\n    .col1 {\n        float: left;\n        margin: 0;\n        padding: 0 ($gutter / 4);\n        width: 50%;\n        box-sizing: border-box;\n    }\n\n    .s-full {\n        float: none;\n        margin: 0;\n        padding: 0 ($gutter / 4);\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    .s-half {\n        float: left;\n        margin: 0;\n        padding: 0 ($gutter / 4);\n        width: 50%;\n        box-sizing: border-box;\n    }\n\n    .clear {\n        clear: both;\n    }\n\n    // * Show or hide elements by breakpoint\n    .s-hide {\n        display: none;\n    }\n\n    .s-show-block {\n        display: block;\n    }\n\n    .s-show-inline {\n        display: inline;\n    }\n\n    .m-show-block,\n    .m-show-inline,\n    .l-show-block,\n    .l-show-inline {\n        display: none;\n    }\n}\n","// Body\nbody {\n\tmargin: 0;\n\tpadding: 0;\n\tfont-family: $body-font;\n}\n\n$red: blue;\n\n.red {\n\tcolor: purple;\n}\n\n.red-light {\n\tcolor: light($red, 70%);\n}\n\n.red-dark {\n\tcolor: dark($red, 50%);\n}\n\n@media (min-width: $bp-l) {\n\tbody {\n\t\tfont-size: 18px;\n\t}\n}\n@media (min-width: $bp-m) and (max-width: ($bp-l - 1)) {\n\tbody {\n\t\tfont-size: 16px;\n\t}\n}\n@media (min-width: $bp-s) and (max-width: ($bp-m - 1)) {\n\tbody {\n\t\tfont-size: 14px;\n\t}\n}\n","///*\n// * Hoisin.scss\n// * Functions library\n// */\n\n\n///* \n// * Darken colors\n// * \n// * This function uses mix to have a more granular control of the darkening.\n// * @param $color ($variable | #HEX);\n// * @param $value (percentage);\n// *\n// * dark($blue, 20%);\n// */\n@function dark($color, $value: 10%) {\n    @return mix($black, $color, $value);\n}\n\n\n///* \n// * Lighten colors\n// * \n// * This function uses mix to have a more granular control of the darkening.\n// * @param $color ($variable | #HEX);\n// * @param $value (percentage);\n// *\n// * light($blue, 20%);\n// */\n@function light($color, $value: 10%) {\n    @return mix($white, $color, $value);\n}\n\n\n///* \n// * Flexible Span \n// * \n// * This function generates a width value based on the parameter given, using \n// * details from the medium size grid.\n// *\n// * @param $width ($width);\n// *\n// * span-fw('m-2_3');\n// */\n@function span-fw($width) {\n    @if $width == 'm-2_3' {\n        @return 66.66%;\n    } @else if $width == 'm-half' {\n        @return 50%;\n    } @else if $width == 'm-1_3' {\n        @return 33.33%;\n    } @else if $width == 'm-4_4' {\n        @return 25%;\n    } @else {\n        @return 100%;\n    }\n}\n\n\n///* \n// * Span\n// * \n// * This function generates a width value based on the parameter given, using \n// * details from the $gutter and $col global variables.\n// *\n// * @param $cols ($cols);\n// *\n// * span(8);\n// */\n@function span($cols: 12) {\n    @return ($cols * $col-width) + (($cols - 1) * $gutter);\n}\n\n\n///* \n// * Span XL\n// * \n// * This function generates a width value based on the parameter given, using \n// * details from the $xl-gutter and $xl-col global variables.\n// *\n// * @param $cols ($cols);\n// *\n// * span-xl(8);\n// */\n@function span-xl($cols: 12) {\n    @return ($cols * $xl-col-width) + (($cols - 1) * $xl-gutter);\n}\n","// Component name\nbody {\n\tcolor: #666666;\n\tmargin: 0;\n\tpadding: 50px 0;\n\tfont-family: \"Roboto Condensed\", sans-serif;\n\tfont-size: 18px;\n\tfont-weight: 300;\n\tbackground: white;\n}\n\nh2 {\n\tcolor: #d8531e;\n\tfont-weight: 300;\n\tmargin: 0;\n\tfont-size: 48px;\n\tfont-size: 48px;\n}\n\nh3 {\n\tcolor: #333333;\n\tfont-weight: 300;\n\tmargin: 0;\n\tfont-size: 36px;\n\tline-height: 36px;\n\tpadding: 12px 0;\n}\n\np {\n\tmargin: 0 0 21px 0;\n}\n\na {\n\tcolor: #d8531e;\n}\n\nsection {\n\tmargin-bottom: 50px;\n}\n\n.box {\n\tmargin: 0 0 ($gutter / 2) 0;\n\tpadding: ($gutter / 2);\n\tbackground: #f5f5f5;\n\n\t@include respond-to(l) {\n\t\tmargin-bottom: $gutter;\n\t\tpadding: $gutter;\n\t}\n\t@include respond-to(xl) {\n\t\tmargin-bottom: $xl-gutter;\n\t\tpadding: $xl-gutter;\n\t}\n\n\tp {\n\t\tmargin: 0;\n\t}\n}\n\n.code {\n\tfont-family: \"Courier New\", serif;\n\tfont-size: 14px;\n}\n\n.nesting {\n\tbackground-color: #ffffdf;\n\tmargin-bottom: 20px;\n\n\t.nesting {\n\t\tbackground-color: #ffe7df;\n\t}\n}\n\npre {\n\tborder: 1px solid #cccccc;\n\tbackground-color: #f9f9f9;\n\tpadding: 10px;\n\tmargin: 0;\n\toverflow: auto;\n}\n\n.content {\n\t@include respond-to(l) {\n\t\tfloat: left;\n\t\tmargin: 0 ($gutter / 2);\n\t\twidth: span(8);\n\t}\n\t@include respond-to(xl) {\n\t\tmargin: 0 ($xl-gutter / 2);\n\t\twidth: span-xl(8);\n\t}\n\t@include respond-to(m) {\n\t\tfloat: left;\n\t\tpadding: 0 ($gutter / 4);\n\t\twidth: span-fw(m-2_3);\n\t\tbox-sizing: border-box;\n\t}\n\t@include respond-to(m) {\n\t\tfloat: left;\n\t\tpadding: 0 ($gutter / 4);\n\t\twidth: span-fw(m-2_3);\n\t\tbox-sizing: border-box;\n\t}\n}\n\n.sidebar {\n\t@include respond-to(l) {\n\t\tfloat: right;\n\t\tmargin: 0 ($gutter / 2);\n\t\twidth: span(4);\n\t}\n\t@include respond-to(xl) {\n\t\tmargin: 0 ($xl-gutter / 2);\n\t\twidth: span-xl(4);\n\t}\n\t@include respond-to(m) {\n\t\tfloat: right;\n\t\tpadding: 0 ($gutter / 4);\n\t\twidth: span-fw(m-1_3);\n\t\tbox-sizing: border-box;\n\t}\n\t@include respond-to(s) {\n\t\tpadding: 0 ($gutter / 4);\n\t\tbox-sizing: border-box;\n\t}\n}\n\n@include respond-to(s) {\n\t.test {\n\t\tpadding: 0 ($gutter / 4);\n\t\tbox-sizing: border-box;\n\t}\n}\n","///*\n// * Hoisin.scss\n// * Mixins library\n// *\n// * Vendor prefixes are handled by gulp-autoprefixer.\n// * All prefixer mixins will be removed in future versions\n// */\n\n\n///* \n// * Respond to\n// * @param $breakpoint (s | m | m-up | m-down | l | xl);\n// *\n// * @include respond-to(m) {\n// *      property: value;\n// * }\n// */\n@mixin respond-to($bp) {\n    @if $bp == 's' {\n        @media (max-width: $bp-m) {\n            @content;\n        }\n    }\n    @else if $bp == 'm' {\n        @media (min-width: $bp-m) and (max-width: ($bp-l - 1)) {\n            @content;\n        }\n    }\n    @else if $bp == 'm-up' {\n        @media (min-width: $bp-m) {\n            @content;\n        }\n    }\n    @else if $bp == 'm-down' {\n        @media (max-width: ($bp-l - 1)) {\n            @content;\n        }\n    }\n    @else if $bp == 'l' {\n        @media (min-width: $bp-l) {\n            @content;\n        }\n    }\n    @else if $bp == 'xl' {\n        @media (min-width: $bp-xl) {\n            @content;\n        }\n    }\n}\n\n\n///* \n// * Box shadow\n// * @param $value ($h-offset $v-offset $blur $spread $color | inset | initial | inherit);\n// *\n// * @include box-shadow(2px 2px 2px 2px rgba(0,0,0,0.2));\n// */\n@mixin box-shadow($value: 0 0 4px 0 rgba(0, 0, 0, 0.5)) {\n    @include prefixer(box-shadow, $value, webkit);\n}\n\n\n///* \n// * Two colors vertical linear gradient\n// * @param $value ($initial-color);\n// * @param $value ($final-color);\n// *\n// * @include gradients(#FF0, #F00);\n// */\n@mixin gradients($first, $second) {\n    background-color: $first;\n    background-image: linear-gradient(top, $first 0%, $second 100%);\n}\n\n\n///* \n// * Box model (defaults to border-box)\n// * @param $type ($box-model);\n// *\n// * @include box-sizing;\n// */\n@mixin box-sizing($type: border-box) {\n    @include prefixer(box-sizing, $type, moz webkit);\n}\n\n\n// *\n// * Opacity (Old IE disabled by default)\n// * @param $opac ($opacity);\n// * @param $ie (true);\n// *\n// * @include opacity(0.7, true);\n// */\n@mixin opacity($opac, $ie: false) {\n    @if $ie {\n        filter: alpha(opacity=$opac * 100);\n    }\n    opacity: $opac;\n}\n\n\n///*\n// * Transition (defaults to .15 sec)\n// * @param $value ($speed | $property | $easing);\n// *\n// * @include transition(height 200ms ease-out);\n// */\n@mixin transition($value: 0.15s) {\n    @include prefixer(transition, $value, webkit);\n}\n\n\n///* \n// * Rotate (Origin defaults to center of element)\n// * @param $deg ($degrees);\n// * @param $orig ($h-origin $v-origin);\n// *\n// * @include rotate(45deg);\n// */\n@mixin rotate($deg, $orig: 50% 50%) {\n    @include prefixer(transform, rotate(#{$deg}), webkit ms);\n    @if $orig != 50% and $orig != (50% 50%) and $orig != center and $orig != (center center) {\n        @include prefixer(transform-origin, $orig, webkit ms);\n    }\n}\n\n\n///*\n// * Translate \n// * @param $hdist ($distance);\n// * @param $vdist ($distance);\n// *\n// * @include translate(20px, 20px);\n// */\n@mixin translate($hdist: 0, $vdist: 0) {\n    @include prefixer(transform, translate(#{$hdist}, #{$vdist}), webkit ms);\n}\n\n\n///* \n// * Animation (defaults to .15 sec)\n// * @param $options ($animation-name $duration | $iteration);\n// *\n// * @include animation(myanimation 2s 3);\n// */\n@mixin animation($options) {\n    @include prefixer(animation, $options);\n}\n\n\n\n///*\n// * Placeholder text color\n// * @param $color ($color);\n// *\n// * @include placeholder(#999);\n// */\n@mixin placeholder($color) {\n    &::-webkit-input-placeholder {\n        color: $color;\n    }\n\n    &::-moz-placeholder {\n        color: $color; \n    }\n\n    &::-ms-input-placeholder {\n        color: $color;\n    }\n}\n\n\n///*\n// * Disallow user selection\n// *\n// * @include noselect;\n// */\n@mixin noselect {\n    -webkit-touch-callout: none;\n    @include prefixer(user-select, none, webkit ms);\n}\n\n\n///*\n// * Prefixer\n// * @param $property ($name);\n// * @param $value ($value);\n// * @param $prefixes (webkit | moz | ms | o);\n// *\n// * @include prefixer(animation, $options);\n// */\n@mixin prefixer($property, $value, $prefixes: webkit moz ms o) {\n    @each $prefix in $prefixes {\n        #{'-' + $prefix + '-' + $property}: #{$value};\n    }\n    #{$property}: #{$value};\n}\n"]}